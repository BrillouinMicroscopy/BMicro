name: Checks

on:
  push:
  schedule:
  - cron: "0 0 1 * *"

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        os: [macos-latest, ubuntu-latest, windows-latest]
    env:
      # Display must be available globally for linux to know where xvfb is
      DISPLAY: :0
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup xvfb (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 libegl1-mesa
        # start xvfb in the background
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
    - name: Install dependencies for Mac and Linux
      if: runner.os != 'Windows'
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        python -m pip install codecov coverage flake8 pytest
        python -m pip install -r tests/requirements.txt
        # install bmlab from main branch
        pip install git+https://github.com/BrillouinMicroscopy/bmlab.git@main
        # install dependencies
        pip install -e .
        # show installed packages
        pip freeze
    - name: Install dependencies for Windows
      if: runner.os == 'Windows'
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        python -m pip install codecov coverage flake8 pytest
        python -m pip install -r tests/requirements.txt
        # install bmlab from main branch
        pip install ("git+https://github.com/BrillouinMicroscopy/bmlab.git@main")
        # install dependencies
        pip install -e .
        # show installed packages
        pip freeze
    - name: Test with pytest
      run: |
        coverage run --source=bmicro -m pytest tests
    - name: Lint with flake8
      run: |
        flake8 .
    - name: Submit code coverage
      run: |
        coverage report -m
        codecov
